{
    "body": "In which fields of DNA sequencing are Bloom filters applied?", 
    "documents": [
        "http://www.ncbi.nlm.nih.gov/pubmed/26539459", 
        "http://www.ncbi.nlm.nih.gov/pubmed/27412092", 
        "http://www.ncbi.nlm.nih.gov/pubmed/25252952", 
        "http://www.ncbi.nlm.nih.gov/pubmed/24565280", 
        "http://www.ncbi.nlm.nih.gov/pubmed/27828710", 
        "http://www.ncbi.nlm.nih.gov/pubmed/20472541", 
        "http://www.ncbi.nlm.nih.gov/pubmed/25398208", 
        "http://www.ncbi.nlm.nih.gov/pubmed/25183486"
    ], 
    "ideal_answer": [
        "A novel algorithm, fast and accurate classification of sequences (FACSs), is introduced that can accurately and rapidly classify sequences as belonging or not belonging to a reference sequence.  Classification of DNA sequences using Bloom filters Lighter is a fast, memory-efficient tool for correcting sequencing errors.", 
        "A novel algorithm, fast and accurate classification of sequences (FACSs), is introduced that can accurately and rapidly classify sequences as belonging or not belonging to a reference sequence. Classification of DNA sequences using Bloom filters. Further, we note that Bloom filters would be suitable to implicitly store spaced seeds and be tolerant to sequencing errors. Lighter avoids counting k-mers. Fast lossless compression via cascading Bloom filters. ", 
        "A novel algorithm, fast and accurate classification of sequences (FACSs), is introduced that can accurately and rapidly classify sequences as belonging or not belonging to a reference sequence. Classification of DNA sequences using Bloom filters. Instead, it uses a pair of Bloom filters, one holding a sample of the input k-mers and the other holding k-mers likely to be correct. Fast lossless compression via cascading Bloom filters. Lighter is a fast, memory-efficient tool for correcting sequencing errors. ", 
        "A novel algorithm, fast and accurate classification of sequences (FACSs), is introduced that can accurately and rapidly classify sequences as belonging or not belonging to a reference sequence. Classification of DNA sequences using Bloom filters. Instead, it uses a pair of Bloom filters, one holding a sample of the input k-mers and the other holding k-mers likely to be correct. Lighter is a fast, memory-efficient tool for correcting sequencing errors. Lighter avoids counting k-mers. ", 
        "Bloom Filters (BFs) reduce the memory footprint required to store millions of k-mers while allowing for fast set containment queries, at the cost of a low false positive rate (FPR). Cascading Bloom filters have been used to improve the memory usage and speed of DNA sequence compression.", 
        "Further, we note that Bloom filters would be suitable to implicitly store spaced seeds and be tolerant to sequencing errors.  It uses a pair of cache oblivious Bloom filters, one holding a uniform sample of [Formula: see text]-spaced sequenced [Formula: see text]-mers and the other holding [Formula: see text]-mers classified as likely correct, using a simple statistical test."
    ], 
    "exact_answer": [
        [
            "storage"
        ], 
        [
            "compression"
        ], 
        [
            "alignment-free comparisons"
        ]
    ], 
    "type": "list", 
    "id": "58eb6061eda5a57672000005", 
    "snippets": [
        {
            "offsetInBeginSection": 298, 
            "offsetInEndSection": 492, 
            "text": "A novel algorithm, fast and accurate classification of sequences (FACSs), is introduced that can accurately and rapidly classify sequences as belonging or not belonging to a reference sequence. ", 
            "beginSection": "abstract", 
            "document": "http://www.ncbi.nlm.nih.gov/pubmed/20472541", 
            "endSection": "abstract"
        }, 
        {
            "offsetInBeginSection": 0, 
            "offsetInEndSection": 51, 
            "text": "Classification of DNA sequences using Bloom filters", 
            "beginSection": "title", 
            "document": "http://www.ncbi.nlm.nih.gov/pubmed/20472541", 
            "endSection": "title"
        }, 
        {
            "offsetInBeginSection": 0, 
            "offsetInEndSection": 240, 
            "text": "Lighter is a fast, memory-efficient tool for correcting sequencing errors. Lighter avoids counting k-mers. Instead, it uses a pair of Bloom filters, one holding a sample of the input k-mers and the other holding k-mers likely to be correct.", 
            "beginSection": "abstract", 
            "document": "http://www.ncbi.nlm.nih.gov/pubmed/25398208", 
            "endSection": "abstract"
        }, 
        {
            "offsetInBeginSection": 0, 
            "offsetInEndSection": 53, 
            "text": "Fast lossless compression via cascading Bloom filters", 
            "beginSection": "title", 
            "document": "http://www.ncbi.nlm.nih.gov/pubmed/25252952", 
            "endSection": "title"
        }, 
        {
            "offsetInBeginSection": 1368, 
            "offsetInEndSection": 1661, 
            "text": "In contrast to reference-based methods that first align reads to the genome, we hash all reads into Bloom filters to encode, and decode by querying the same Bloom filters using read-length subsequences of the reference genome. Further compression is achieved by using a cascade of such filters", 
            "beginSection": "abstract", 
            "document": "http://www.ncbi.nlm.nih.gov/pubmed/25252952", 
            "endSection": "abstract"
        }, 
        {
            "offsetInBeginSection": 0, 
            "offsetInEndSection": 78, 
            "text": "Using cascading Bloom filters to improve the memory usage for de Brujin graphs", 
            "beginSection": "title", 
            "document": "http://www.ncbi.nlm.nih.gov/pubmed/24565280", 
            "endSection": "title"
        }, 
        {
            "offsetInBeginSection": 286, 
            "offsetInEndSection": 446, 
            "text": "In this work, we show how to reduce the memory required by the data structure of Chikhi and Rizk (WABI'12) that represents de Brujin graphs using Bloom filters.", 
            "beginSection": "abstract", 
            "document": "http://www.ncbi.nlm.nih.gov/pubmed/24565280", 
            "endSection": "abstract"
        }, 
        {
            "offsetInBeginSection": 824, 
            "offsetInEndSection": 1006, 
            "text": "We introduce a novel hash-based method for constructing the string graph. We use incremental hashing, and specifically a modification of the Karp-Rabin fingerprint, and Bloom filters", 
            "beginSection": "abstract", 
            "document": "http://www.ncbi.nlm.nih.gov/pubmed/25183486", 
            "endSection": "abstract"
        }, 
        {
            "offsetInBeginSection": 956, 
            "offsetInEndSection": 1080, 
            "text": "Further, we note that Bloom filters would be suitable to implicitly store spaced seeds and be tolerant to sequencing errors.", 
            "beginSection": "abstract", 
            "document": "http://www.ncbi.nlm.nih.gov/pubmed/26539459", 
            "endSection": "abstract"
        }, 
        {
            "offsetInBeginSection": 915, 
            "offsetInEndSection": 1168, 
            "text": " It uses a pair of cache oblivious Bloom filters, one holding a uniform sample of [Formula: see text]-spaced sequenced [Formula: see text]-mers and the other holding [Formula: see text]-mers classified as likely correct, using a simple statistical test.", 
            "beginSection": "abstract", 
            "document": "http://www.ncbi.nlm.nih.gov/pubmed/27412092", 
            "endSection": "abstract"
        }, 
        {
            "offsetInBeginSection": 0, 
            "offsetInEndSection": 77, 
            "text": "Improving Bloom Filter Performance on Sequence Data Using k-mer Bloom Filters", 
            "beginSection": "title", 
            "document": "http://www.ncbi.nlm.nih.gov/pubmed/27828710", 
            "endSection": "title"
        }, 
        {
            "offsetInBeginSection": 482, 
            "offsetInEndSection": 647, 
            "text": "BFs reduce the memory footprint required to store millions of k-mers while allowing for fast set containment queries, at the cost of a low false positive rate (FPR).", 
            "beginSection": "abstract", 
            "document": "http://www.ncbi.nlm.nih.gov/pubmed/27828710", 
            "endSection": "abstract"
        }, 
        {
            "offsetInBeginSection": 1058, 
            "offsetInEndSection": 1226, 
            "text": "We consider several variants of such k-mer Bloom filters (kBFs), derive theoretical upper bounds for their FPR, and discuss their range of applications and limitations.", 
            "beginSection": "abstract", 
            "document": "http://www.ncbi.nlm.nih.gov/pubmed/27828710", 
            "endSection": "abstract"
        }, 
        {
            "offsetInBeginSection": 0, 
            "offsetInEndSection": 54, 
            "text": "Fast lossless compression via cascading Bloom filters.", 
            "beginSection": "title", 
            "document": "http://www.ncbi.nlm.nih.gov/pubmed/25252952", 
            "endSection": "title"
        }, 
        {
            "offsetInBeginSection": 0, 
            "offsetInEndSection": 55, 
            "text": "Fast lossless compression via cascading Bloom filters.", 
            "beginSection": "title", 
            "document": "http://www.ncbi.nlm.nih.gov/pubmed/25252952", 
            "endSection": "title"
        }
    ]
}